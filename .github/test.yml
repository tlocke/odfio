name: odio

on: [push]

jobs:
  main-test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

        postgresql-version: [13, 12, 11, 10, 9.6, 9.5]



    container: python:${{ matrix.python-version }}



    services:

      postgres:

        image: postgres:${{ matrix.postgresql-version }}

        env:

          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started

        options: >-

          --health-cmd pg_isready

          --health-interval 10s

          --health-timeout 5s

          --health-retries 5



    steps:

      - uses: actions/checkout@v2

      - name: Install dependencies

        run: |

          python -m pip install --upgrade pip

          pip install pytest pytest-mock pytest-benchmark pytz

          python setup.py install

      - name: Set up Postgresql

        env:

          PGHOST: postgres

          PGPASSWORD: postgres

          PGUSER: postgres

        run: |

          apt-get update

          apt-get install --yes --no-install-recommends postgresql-client

          psql -c "CREATE EXTENSION hstore;"

          psql -c "SELECT pg_reload_conf()"

      - name: Test with pytest

        env:

          PGHOST: postgres

          PGPASSWORD: postgres

        run: |

          python -m pytest -x -v --ignore=test/dbapi/test_auth.py --ignore=test/legacy/test_auth.py --ignore=test/native/test_auth.py test 



  auth-test:

    runs-on: ubuntu-latest

    strategy:

      matrix:

        python-version: [3.8]

        postgresql-version: [13, 9.5]

        auth-type: [md5, gss, password, scram-sha-256]

        exclude:

          - python-version: 3.8

            postgresql-version: 9.5

            auth-type: scram-sha-256

          - python-version: 3.8

            postgresql-version: 9.6

            auth-type: scram-sha-256



    container: python:${{ matrix.python-version }}



    services:

      postgres:

        image: postgres:${{ matrix.postgresql-version }}

        env:

          POSTGRES_PASSWORD: postgres

          POSTGRES_HOST_AUTH_METHOD: ${{ matrix.auth-type }}

          POSTGRES_INITDB_ARGS: "${{ matrix.auth-type == 'scram-sha-256' && '--auth-host=scram-sha-256' || '' }}"

        # Set health checks to wait until postgres has started

        options: >-

          --health-cmd pg_isready

          --health-interval 10s

          --health-timeout 5s

          --health-retries 5



    steps:

      - uses: actions/checkout@v2

      - name: Install dependencies

        run: |

          python -m pip install --upgrade pip

          pip install pytest pytest-mock pytest-benchmark pytz

          python setup.py install

      - name: Test with pytest

        env:

          PGHOST: postgres

          PGPASSWORD: postgres

        run: |

          python -m pytest -x test/dbapi/github-actions/${{ matrix.auth-type }}_dbapi.py test/native/github-actions/${{ matrix.auth-type }}_native.py test/legacy/github-actions/${{ matrix.auth-type }}_legacy.py



  ssl-test:

    runs-on: ubuntu-latest



    services:

      postgres:

        image: postgres

        env:

          POSTGRES_PASSWORD: postgres

        options: >-

          --health-cmd pg_isready

          --health-interval 10s

          --health-timeout 5s

          --health-retries 5

        ports:

          - 5432:5432



    steps:

      - name: Configure Postgres

        env:

          PGPASSWORD: postgres

          PGUSER: postgres

          PGHOST: localhost

        run: |

          sudo apt update

          sudo apt install --yes --no-install-recommends postgresql-client

          psql -c "ALTER SYSTEM SET ssl = on;"

          psql -c "ALTER SYSTEM SET ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'"

          psql -c "ALTER SYSTEM SET ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'"

          psql -c "SELECT pg_reload_conf()"



      - name: Check out repository code

        uses: actions/checkout@v2

      - name: Set up Python

        uses: actions/setup-python@v2

        with:

          python-version: 3.8

      - name: Install dependencies

        run: |

          python -m pip install --upgrade pip

          pip install pytest pytest-mock pytest-benchmark pytz

          python setup.py install

      - name: SSL Test

        env:

          PGPASSWORD: postgres

          USER: postgres

        run: |

          python -m pytest -x test/dbapi/github-actions/ssl_dbapi.py test/native/github-actions/ssl_native.py test/legacy/github-actions/ssl_legacy.py



  static-test:

    runs-on: ubuntu-latest



    services:

      postgres:

        image: postgres

        env:

          POSTGRES_PASSWORD: cpsnow

        options: >-

          --health-cmd pg_isready

          --health-interval 10s

          --health-timeout 5s

          --health-retries 5

        ports:

          - 5432:5432



    steps:

      - name: Check out repository code

        uses: actions/checkout@v2

      - name: Set up Python

        uses: actions/setup-python@v2

        with:

          python-version: 3.8

      - name: Install dependencies

        run: |

          python -m pip install --upgrade pip

          pip install flake8 flake8-import-order

          python setup.py install

      - name: Lint check

        run: |

          flake8 --exclude venv,.tox,build,versioneer.py

      - name: Doctest

        env:

          PGPASSWORD: cpsnow

          USER: postgres

        run: |

          python -m doctest -o ELLIPSIS README.adoc


